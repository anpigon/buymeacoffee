{"version":3,"sources":["reportWebVitals.ts","components/Container.tsx","components/Top.tsx","components/Header.tsx","components/IconLink.tsx","components/Card.tsx","components/AboutCard.tsx","components/Contents.tsx","components/ExternalLink.tsx","components/Footer.tsx","libs/stripMarkdown.ts","libs/client.ts","components/PostItem.tsx","components/SkeletonArticle.tsx","components/SubTitle.tsx","components/Articles.tsx","components/Button.tsx","components/DonationCard.tsx","App.tsx","index.tsx"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Container","styled","div","TopContainer","Top","src","process","alt","Avatar","img","Username","h1","HeaderContainer","Header","username","className","Icon","IconLink","CardTitle","h2","CardBody","CardFooter","Card","AboutCard","Contents","ExternalLink","href","children","target","rel","FooterContainer","Footer","remark","require","strip","stripMarkdown","markdown","Promise","resolve","reject","use","err","file","String","client","axios","create","baseURL","headers","a","page","limit","author","get","params","data","list","item","body","map","image","json_metadata","metadata","JSON","parse","length","title","url","createdAt","count","PostItemContainer","PostTitle","PostSummary","PostItem","post","style","backgroundImage","SkeletonContainer","SkeletonArticle","height","SubTitle","Articles","useState","loading","setLoading","posts","setPosts","useEffect","getPosts","response","filter","startsWith","slice","finally","Button","QRCodeWrapper","DonationCard","type","address","value","App","config","donation","index","about","split","text","homepage","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1addafb2.chunk.js","sourcesContent":["import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import styled from 'styled-components';\n\nconst Container = styled.div`\n  background-color: #fff;\n`;\n\nexport default Container;\n","import styled from 'styled-components';\n\nexport const TopContainer = styled.div`\n  border-bottom: 1px solid #e9e9e9;\n  display: flex;\n  height: 69px;\n  padding: 0 48px;\n  justify-content: space-between;\n  align-items: center;\n\n  & img {\n    max-height: 35px;\n  }\n\n  @media (max-width: 768px) {\n    padding: 0 24px;\n    height: 60px;\n\n    & img {\n      max-height: 30px;\n    }\n  }\n`;\n\nexport default function Top(): JSX.Element {\n  return (\n    <TopContainer>\n      <img src={process.env.PUBLIC_URL + '/coffee.svg'} alt='coffee cup' />\n    </TopContainer>\n  );\n}\n","import styled from \"styled-components\";\n\nexport const Avatar = styled.img`\n  border: 5px solid rgba(255, 129, 63, 0.1);\n  border-radius: 50%;\n  width: 90px;\n  height: 90px;\n  filter: sepia(100%);\n\n  @media (max-width: 768px) {\n    width: 70px;\n    height: 70px;\n    border: 0;\n  }\n`;\n\nexport const Username = styled.h1`\n  margin-left: 24px;\n  font-size: 22px;\n  line-height: 30px;\n  color: #222;\n\n  @media (max-width: 768px) {\n    margin-left: 0;\n    font-size: 20px;\n  }\n`;\n\nexport const HeaderContainer = styled.div`\n  padding: 24px 0;\n  background: #fff;\n  box-shadow: 0 4px 9px -5px rgb(0 0 0 / 5%);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  div {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n  }\n\n  .header-container {\n    width: 1032px;\n    flex-direction: row;\n    justify-content: space-between;\n\n    @media (max-width: 1200px) {\n      width: 100%;\n      padding: 0 15px;\n    }\n\n    @media (max-width: 768px) {\n      justify-content: center;\n    }\n  }\n\n  .header-1 {\n    @media (max-width: 768px) {\n      flex-direction: column;\n      justify-content: center;\n    }\n  }\n`;\n\nexport type HeaderProps = {\n  username: string;\n};\n\nexport default function Header({ username }: HeaderProps): JSX.Element {\n  return (\n    <HeaderContainer>\n      <div className=\"header-container\">\n        <div className=\"header-1\">\n          <Avatar src={`https://steemitimages.com/u/${username}/avatar`} />\n          <Username>{username}</Username>\n        </div>\n        <div className=\"header-2\"></div>\n      </div>\n    </HeaderContainer>\n  );\n}\n","import styled from 'styled-components';\n\nconst Icon = styled.div`\n  width: 35px;\n  height: 35px;\n  background-color: #b2b5ba;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 50%;\n  opacity: 0.3;\n\n  img {\n    width: 50%;\n    height: 50%;\n  }\n`;\n\nexport default function IconLink(): JSX.Element {\n  return (\n    <Icon>\n      <img src={process.env.PUBLIC_URL + '/link.png'} alt='link' />\n    </Icon>\n  );\n}\n","import styled from 'styled-components';\n\nexport const CardTitle = styled.h2`\n  font-size: 24px;\n  line-height: 140%;\n  color: #222;\n  margin-top: 0;\n\n  & > span {\n    color: #717171;\n  }\n`;\n\nexport const CardBody = styled.div``;\n\nexport const CardFooter = styled.div`\n  margin-top: 48px;\n`;\n\nconst Card = styled.div`\n  padding: 24px;\n  border-radius: 4px;\n  background-color: #fff;\n  box-shadow: 0 1px 4px rgb(0 0 0 / 5%);\n  margin-bottom: 15px;\n`;\n\nexport default Card;\n","import styled from 'styled-components';\nimport Card from './Card';\n\nconst AboutCard = styled(Card)`\n  color: #222;\n  line-height: 25px;\n  word-break: break-word;\n  font-size: 16px;\n\n  p {\n    margin: 0 0 20px;\n  }\n`;\n\nexport default AboutCard;\n","import styled from 'styled-components';\n\nconst Contents = styled.div`\n  padding-top: 48px;\n  padding-bottom: 100px;\n  background-color: #f9f9f9;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100%;\n\n  & > .body-container {\n    width: 100%;\n    padding: 0 15px;\n    display: flex;\n    flex-direction: row-reverse;\n    column-gap: 30px;\n\n    @media (min-width: 1200px) {\n      width: 1062px;\n    }\n\n    @media (max-width: 768px) {\n      display: block;\n    }\n  }\n\n  & .body-panel-1 {\n    width: 40.22%;\n\n    @media (max-width: 768px) {\n      width: 100%;\n      margin-bottom: 30px;\n    }\n  }\n\n  & .body-panel-2 {\n    width: 59.6%;\n\n    @media (max-width: 768px) {\n      width: 100%;\n    }\n  }\n`;\n\nexport default Contents;\n","import { FunctionComponent } from \"react\";\n\ntype ExternalLinkProps = {\n  href: string;\n};\n\nconst ExternalLink: FunctionComponent<ExternalLinkProps> = ({\n  href,\n  children,\n}) => {\n  return (\n    <a href={href} target=\"_blank\" rel=\"noopener noreferrer\">\n      {children}\n    </a>\n  );\n};\n\nexport default ExternalLink;\n","import styled from \"styled-components\";\nimport ExternalLink from \"./ExternalLink\";\n\nconst FooterContainer = styled.div`\n  background: #f9f9f9;\n  height: 110px;\n  padding: 0 15px;\n\n  .footer-contents {\n    width: 100%;\n    height: 100%;\n    max-width: 1062px;\n    display: flex;\n    align-items: center;\n    justify-content: flex-end;\n\n    @media (max-width: 768px) {\n      justify-content: center;\n    }\n\n    a {\n      margin-left: 5px;\n      font-weight: bold;\n      color: #333;\n    }\n  }\n`;\n\nexport default function Footer(): JSX.Element {\n  return (\n    <FooterContainer>\n      <div className=\"footer-contents\">\n        <span>Powered by</span>{\" \"}\n        <ExternalLink href=\"https://www.steemit.com/@anpigon\">\n          anpigon\n        </ExternalLink>\n      </div>\n    </FooterContainer>\n  );\n}\n","const remark = require('remark');\nconst strip = require('strip-markdown');\n\nexport function stripMarkdown(markdown: string) {\n  return new Promise((resolve, reject) => {\n    remark()\n      .use(strip)\n      .process(markdown, function (err: any, file: any) {\n        if (err) return reject(err);\n        resolve(String(file));\n      });\n  });\n}\n","import axios from \"axios\";\nimport { stripMarkdown } from \"./stripMarkdown\";\n\nconst client = axios.create({\n  baseURL: \"https://api.wonsama.dev/v1\",\n  headers: {\n    \"Content-Type\": \"application/json; charset=utf-8\",\n  },\n});\n\nexport type Post = {\n  id: number;\n  url: string;\n  title: string;\n  body: string;\n  author?: string;\n  category?: string;\n  created?: string;\n  createdAt: string;\n  json_metadata?: string;\n  last_update?: string;\n  permlink?: string;\n  updatedAt?: string;\n  updatedkr?: string;\n  _id?: string;\n  image?: string;\n};\n\nexport type GetPostsResponse = {\n  count: number;\n  limit: number;\n  page: number;\n  list: Post[];\n};\n\nexport type GetPostsParams = {\n  page?: number;\n  limit?: number;\n  author: string;\n};\n\nexport default async function getPosts({\n  page = 1,\n  limit = 10,\n  author,\n}: GetPostsParams): Promise<GetPostsResponse> {\n  return await client\n    .get<GetPostsResponse>(\"/post\", {\n      params: {\n        page,\n        limit,\n        author,\n      },\n    })\n    .then(async ({ data }) => {\n      // markdown html strip\n      for (const item of data.list) {\n        item.body = String(await stripMarkdown(item.body));\n      }\n      const list: Post[] = data.list.map((item) => {\n        let image;\n        if (item?.json_metadata) {\n          const metadata = JSON.parse(item?.json_metadata);\n          if (metadata?.image && metadata.image?.length) {\n            image = metadata.image[0];\n          }\n        }\n        const { title, body, url, createdAt } = item;\n        return { image, title, body, url, createdAt } as Post;\n      });\n      const { count, limit, page } = data;\n      return { count, limit, page, list };\n    });\n}\n","import React from \"react\";\nimport { Post } from \"src/libs/client\";\nimport styled from \"styled-components\";\nimport Card from \"./Card\";\nimport ExternalLink from \"./ExternalLink\";\n\nconst PostItemContainer = styled.div`\n  display: flex;\n\n  .contents {\n    flex: 1;\n  }\n\n  .image {\n    width: 92px;\n    height: 92px;\n    background-size: cover;\n    background-repeat: no-repeat;\n    background-position: center;\n  }\n`;\n\nconst PostTitle = styled.div`\n  color: #222;\n  width: 100%;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  font-weight: bold;\n  font-size: 16px;\n  margin-bottom: 10px;\n`;\n\nconst PostSummary = styled.div`\n  width: 100%;\n  color: #333;\n  font-size: 14px;\n  display: -webkit-box;\n  overflow: hidden;\n  word-break: keep-all;\n  text-overflow: ellipsis;\n  -webkit-line-clamp: 3;\n  -webkit-box-orient: vertical;\n`;\n\nexport default function PostItem({ post }: { post: Post }): JSX.Element {\n  const { title, body, url, image } = post;\n  return (\n    <Card>\n      <ExternalLink href={`https://www.steemit.com${url}`}>\n        <PostItemContainer>\n          <div className=\"contents\">\n            <PostTitle>{title}</PostTitle>\n            <PostSummary>{body}</PostSummary>\n          </div>\n          {image && (\n            <div\n              className=\"image\"\n              style={{ backgroundImage: `url(${image})` }}\n            />\n          )}\n        </PostItemContainer>\n      </ExternalLink>\n    </Card>\n  );\n}\n","import styled from \"styled-components\";\nimport SkeletonBox from \"react-loading-skeleton\";\n\nimport Card from \"./Card\";\n\nconst SkeletonContainer = styled(Card)`\n  display: flex;\n  .contents {\n    flex: 1;\n    margin-right: 20px;\n\n    & > span:first-child {\n      display: block;\n      margin-bottom: 10px;\n    }\n  }\n  .image {\n    width: 92px;\n    height: 92px;\n  }\n`;\n\nexport default function SkeletonArticle(): JSX.Element {\n  return (\n    <SkeletonContainer>\n      <div className=\"contents\">\n        <SkeletonBox height={20} />\n        <SkeletonBox count={3} />\n      </div>\n      <div className=\"image\">\n        <SkeletonBox height={92} />\n      </div>\n    </SkeletonContainer>\n  );\n}\n","import styled from 'styled-components';\n\nconst SubTitle = styled.h2`\n  text-transform: uppercase;\n  line-height: 25px;\n  letter-spacing: 1px;\n  color: #717171;\n  margin-top: 32px;\n  margin-bottom: 24px;\n  font-size: 14px;\n`;\n\nexport default SubTitle;\n","import React, { useEffect, useState } from \"react\";\nimport getPosts, { Post } from \"src/libs/client\";\nimport PostItem from \"./PostItem\";\nimport SkeletonArticle from \"./SkeletonArticle\";\nimport SubTitle from \"./SubTitle\";\n\ntype ArticlesProps = {\n  author: string;\n};\n\nexport default function Articles({ author }: ArticlesProps): JSX.Element {\n  const [loading, setLoading] = useState(true);\n  const [posts, setPosts] = useState<Post[]>();\n\n  useEffect(() => {\n    getPosts({ author })\n      .then((response) => {\n        if (response && response.list && response.list.length) {\n          const data = response?.list\n            ?.filter(({ title }) => !title.startsWith(\"RE: \"))\n            .slice(0, 5);\n          setPosts(data);\n        }\n      })\n      .finally(() => setLoading(false));\n  }, [author]);\n\n  return (\n    <>\n      <SubTitle>Recent Articles</SubTitle>\n      {loading && [\n        <SkeletonArticle />,\n        <SkeletonArticle />,\n        <SkeletonArticle />,\n      ]}\n      {!loading &&\n        posts?.map((post) => <PostItem key={String(post.url)} post={post} />)}\n    </>\n  );\n}\n","import styled from 'styled-components';\n\nconst Button = styled.a`\n  background-color: #ff813f;\n  border-radius: 51px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  box-shadow: none;\n  color: #fff;\n  height: 48px;\n  font-size: 16px;\n  letter-spacing: 0.2px;\n  width: 100%;\n  text-decoration: none;\n  font-weight: bold;\n  display: flex;\n\n  &:hover {\n    background-color: #f27634;\n  }\n`;\n\nexport default Button;\n","import React from 'react';\nimport styled from 'styled-components';\nimport QRCode from 'qrcode.react';\n\nimport Card, { CardTitle } from './Card';\nimport Button from './Button';\n\nconst QRCodeWrapper = styled.div`\n  background-color: rgba(255, 129, 63, 0.05);\n  border: 1px solid rgba(255, 129, 63, 0.25);\n  border-radius: 4px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  padding: 20px;\n  margin-bottom: 30px;\n\n  img {\n    margin-top: 20px;\n    max-width: 60px;\n  }\n`;\n\nexport type DonationCardProps = {\n  type?: string;\n  username: string;\n  address: string;\n};\n\nexport default function DonationCard({\n  type = 'kakaopay',\n  username,\n  address,\n}: DonationCardProps): JSX.Element {\n  return (\n    <Card>\n      <CardTitle>\n        Buy <span>{username}</span> a coffee\n      </CardTitle>\n      <QRCodeWrapper>\n        <QRCode value={address} />\n        <img src={process.env.PUBLIC_URL + '/kakaopay.png'} alt='kakao pay' />\n      </QRCodeWrapper>\n      <Button href={address} target='_blank' rel='noopener noreferrer'>\n        커피 한 잔 사주기\n      </Button>\n    </Card>\n  );\n}\n","import React from \"react\";\n\nimport Container from \"./components/Container\";\nimport Top from \"./components/Top\";\nimport Header from \"./components/Header\";\nimport IconLink from \"./components/IconLink\";\nimport { CardBody, CardFooter } from \"./components/Card\";\nimport AboutCard from \"./components/AboutCard\";\nimport Contents from \"./components/Contents\";\nimport Footer from \"./components/Footer\";\nimport Articles from \"./components/Articles\";\nimport ExternalLink from \"./components/ExternalLink\";\n\nimport config from \"./config.json\";\nimport DonationCard from \"./components/DonationCard\";\n\nfunction App() {\n  return (\n    <Container>\n      <Top />\n      <Header username={config.username} />\n      <Contents>\n        <div className=\"body-container\">\n          <div className=\"body-panel-1\">\n            {config.donation.map((donation, index) => (\n              <DonationCard\n                key={`${donation.type}-${index}`}\n                username={config.username}\n                type={donation.type}\n                address={donation.address}\n              />\n            ))}\n          </div>\n          <div className=\"body-panel-2\">\n            <AboutCard>\n              <CardBody>\n                {config.about.split(\"\\n\").map((text) => (\n                  <p>{text}</p>\n                ))}\n              </CardBody>\n              <CardFooter>\n                <ExternalLink href={config.homepage}>\n                  <IconLink />\n                </ExternalLink>\n              </CardFooter>\n            </AboutCard>\n            <Articles author={config?.username} />\n          </div>\n        </div>\n      </Contents>\n      <Footer />\n    </Container>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\n\nimport 'normalize.css';\nimport './index.css';\n\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}